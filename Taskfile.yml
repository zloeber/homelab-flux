---
version: "3"

vars:
  KUBERNETES_DIR: "{{.ROOT_DIR}}/kubernetes"
  ANSIBLE_DIR: "{{.ROOT_DIR}}/ansible"
  LOCAL_BIN_PATH: "{{.ROOT_DIR}}/venv"
  python_version: "3.10.7"
  python_venv_path:
    sh: if [[ "{{.PYTHON_VENV_PATH}}" == "" ]]; then echo "venv"; else echo "$(dirname {{.LOCAL_BIN_PATH}})"; fi
  python_bin_path: "{{.python_venv_path}}/bin"

dotenv: [".config.env"]

env:
  KUBECONFIG: "{{.ROOT_DIR}}/kubeconfig"
  SOPS_AGE_KEY_FILE: ~/.config/sops/age/keys.txt

includes:
  ansible: .taskfiles/ansible.yml
  cluster: .taskfiles/cluster.yml
  kube: .taskfiles/kube.yml
  precommit: .taskfiles/precommit.yml
  sops: .taskfiles/sops.yml
  install: .taskfiles/install.yml
  lint: .taskfiles/lint.yml
  format: .taskfiles/format.yml
  flux: .taskfiles/flux.yml
  cloudflared: .taskfiles/cloudflared.yml

tasks:
  init:brew:
    desc: Initialize workstation dependencies with Brew
    cmds:
      - brew install {{.DEPS}} {{.CLI_ARGS}}
    preconditions:
      - sh: command -v brew
        msg: |
          Homebrew is not installed. Using MacOS, Linux or WSL?
          Head over to https://brew.sh to get up and running.
    vars:
      DEPS: >-
        age
        ansible
        cilium-cli
        cloudflare/cloudflare/cloudflared
        direnv
        fluxcd/tap/flux
        go-task/tap/go-task
        helm
        ipcalc
        jq
        kubernetes-cli
        kustomize
        pre-commit
        prettier
        sops
        stern
        weaveworks/tap/gitops
        yamllint
        yq

  verify:
    desc: Verify env settings
    cmds:
      - source {{.python_venv_path}}/bin/activate
      - ./configure --verify

  configure:
    desc: Configure repository from env settings
    cmds:
      - ./configure

  venv:clean:
    desc: Remove virtual environment
    silent: true
    cmds:
      - |
        rm -rf {{.python_venv_path}}

  venv:
    desc: Create virtual environment
    silent: true
    cmds:
      - |
        python3 -m venv {{.python_venv_path}}
        source {{.python_venv_path}}/bin/activate
        pip3 install pip --upgrade --index-url=https://pypi.org/simple/
    status:
      - test -d {{.python_venv_path}}

  venv:install:
    desc: Install locally
    silent: true
    deps: [venv]
    cmds:
      - |
        source {{.python_venv_path}}/bin/activate
        pip3 install -r requirements.txt
